import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

/**
 * 
 * A class that creates the playable character and lets the player manipulate
 * it.
 *
 * @author myersal. Created Feb 6, 2015.
 */

public class Player extends AbstractCharacter {
	private static final int BLOCK_WIDTH = 600 / 15;
	private static final int BLOCK_HEIGHT = 400 / 10;

	/**
	 * 
	 * Creates a player.
	 *
	 * @param x
	 * @param y
	 */

	public Player(int x, int y) {
		super(x, y);

	}

	/**
	 * 
	 * Draws the playable character on the environment.
	 *
	 * @param g
	 */

	protected void drawOn(Graphics2D g) {

		 BufferedImage img = null;
		 try {
		 img = ImageIO
		 .read(new File(
		 "C:/EclipseWorkspaces/csse220/ArcadeGameProject/src/miner2.png"));
		 } catch (IOException exception) {
		 // TODO Auto-generated catch-block stub.
		 exception.printStackTrace();
		 }
		 
		 g.translate(super.xLoc * BLOCK_WIDTH, super.yLoc * BLOCK_HEIGHT);
		 
		 g.drawImage(img, 0, 0, BLOCK_WIDTH,
		 BLOCK_HEIGHT, 0, 0, img.getWidth(), img.getHeight(),
		 null);
		 
		 g.translate(-super.xLoc * BLOCK_WIDTH, -super.yLoc * BLOCK_HEIGHT);
		

	}

	/**
	 * 
	 * Returns the Y location of the character.
	 *
	 * @return
	 */

	public int getYLoc() {
		return this.yLoc;
	}

	/**
	 * 
	 * Returns the X location of the character.
	 *
	 * @return
	 */

	public int getXLoc() {
		return this.xLoc;
	}

	public void die() {
		// TODO Auto-generated method stub

	}
}
